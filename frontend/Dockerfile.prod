# syntax=docker/dockerfile:1

#########################
# Этап 1 — deps         #
#########################
FROM node:22-alpine AS deps
WORKDIR /app

COPY package.json package-lock.json* ./
RUN npm ci --omit=dev --ignore-scripts

#########################
# Этап 2 — build        #
#########################
FROM node:22-alpine AS builder
WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Убедимся что у нас есть все dev зависимости для build
RUN npm ci --ignore-scripts

# Установим переменные окружения для build
ENV NITRO_PRESET=node-server
ENV NODE_ENV=production

# Выполним build
RUN npm run build

# Проверим что файлы созданы
RUN ls -la .output/ && ls -la .output/server/

#########################
# Этап 3 — prod         #
#########################
FROM node:22-alpine AS prod
WORKDIR /app

# Установим только production зависимости
COPY package.json package-lock.json* ./
RUN npm ci --omit=dev --ignore-scripts && npm cache clean --force

# Копируем только .output из builder
COPY --from=builder /app/.output ./.output

# Создаем пользователя для безопасности
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nuxtjs
USER nuxtjs

ENV NODE_ENV=production
ENV NITRO_HOST=0.0.0.0
ENV NITRO_PORT=3000

EXPOSE 3000

CMD ["node", ".output/server/index.mjs"]