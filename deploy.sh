#!/bin/bash

# -----------------------------------------------------------------------------
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –±–æ–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
# –í–µ—Ä—Å–∏—è —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend.
# -----------------------------------------------------------------------------

set -e

# --- 1. –ü–û–î–ì–û–¢–û–í–ö–ê ---
echo "‚ñ∂Ô∏è  –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."

set -a
if [ -f .env ]; then
    source .env
else
    echo "‚ùå ERROR: –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi
set +a

if [ -z "$MYSQL_ROOT_PASSWORD" ] || [ -z "$MYSQL_PASSWORD" ]; then
    echo "‚ùå ERROR: MYSQL_ROOT_PASSWORD –∏ MYSQL_PASSWORD –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env"
    exit 1
fi

echo "üîÑ  –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã Docker..."
docker compose -f docker-compose.yml -f docker-compose.prod.yml pull

# --- 2. –≠–¢–ê–ü –°–ë–û–†–ö–ò ---
echo "üõ†Ô∏è  –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã..."
docker compose -f docker-compose.yml -f docker-compose.prod.yml build --parallel backend frontend scheduler
echo "‚úÖ –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ."

# --- 3. –≠–¢–ê–ü –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø ---
echo "üöÄ  –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å—ã –¥–æ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏–π..."
docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --remove-orphans backend frontend scheduler

# --- 4. –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò –°–ï–†–í–ò–°–û–í ---
echo "‚åõ  –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º backend..."
# –ò—Å–ø–æ–ª—å–∑—É–µ–º curl –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –≠—Ç–æ –Ω–∞–¥–µ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å—é —Ü–µ–ø–æ—á–∫—É.
timeout 120s bash -c '
  until docker compose -f docker-compose.yml -f docker-compose.prod.yml exec -T backend curl -sf http://localhost/ > /dev/null 2>&1; do
    echo "–ñ–¥–µ–º, –ø–æ–∫–∞ backend –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ http://localhost/..."
    sleep 3
  done
' || {
  echo "‚ùå ERROR: Backend –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ 120 —Å–µ–∫—É–Ω–¥. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏."
  docker compose -f docker-compose.yml -f docker-compose.prod.yml logs --tail=50 backend
  exit 1
}
echo "‚úÖ Backend –≥–æ—Ç–æ–≤!"

# --- 5. –ú–ò–ì–†–ê–¶–ò–ò –ò –ö–ï–®–ò–†–û–í–ê–ù–ò–ï ---
echo "üõ†Ô∏è  –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è..."
docker compose -f docker-compose.yml -f docker-compose.prod.yml exec -T backend php artisan down || true

echo "–í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker compose -f docker-compose.yml -f docker-compose.prod.yml exec -T backend php artisan migrate --force

echo "–û—á–∏—â–∞–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
docker compose -f docker-compose.yml -f docker-compose.prod.yml exec -T backend php artisan optimize:clear
docker compose -f docker-compose.yml -f docker-compose.prod.yml exec -T backend php artisan config:cache
docker compose -f docker-compose.yml -f docker-compose.prod.yml exec -T backend php artisan route:cache
docker compose -f docker-compose.yml -f docker-compose.prod.yml exec -T backend php artisan view:cache

echo "–í—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è..."
docker compose -f docker-compose.yml -f docker-compose.prod.yml exec -T backend php artisan up

# --- 6. –§–ò–ù–ê–õ–¨–ù–´–ï –®–ê–ì–ò ---
echo "üîÑ  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ DNS –∫–µ—à–∞..."
docker compose -f docker-compose.yml -f docker-compose.prod.yml restart nginx

# 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
echo "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏..."
timeout 30 bash -c 'until curl -f http://localhost/ > /dev/null 2>&1; do
    sleep 2
    echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞..."
done'

if [ $? -eq 0 ]; then
    echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo "–°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker compose -f docker-compose.yml -f docker-compose.prod.yml ps
else
    echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è!"
    echo "–õ–æ–≥–∏ nginx:"
    docker compose -f docker-compose.yml -f docker-compose.prod.yml logs --tail=10 nginx
    exit 1
fi

# 8. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
docker image prune -f

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"