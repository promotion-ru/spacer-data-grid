#!/bin/bash

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
# –£–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å –ø—É—Ç–∏ –∫ –≤–∞—à–∏–º docker-compose —Ñ–∞–π–ª–∞–º
COMPOSE_FILES="-f docker-compose.yml -f docker-compose.prod.yml"

# –ò–º—è —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV_FILE=".env"
# -----------------

# –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç—å, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π
set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."

# 1. –ü–†–û–í–ï–†–ö–ò –ü–ï–†–ï–î –ó–ê–ü–£–°–ö–û–ú
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -f "$ENV_FILE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –æ–∫—Ä—É–∂–µ–Ω–∏—è '$ENV_FILE' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Docker –¥–µ–º–æ–Ω –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå –û—à–∏–±–∫–∞: Docker –¥–µ–º–æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–∫—Ä–∏–ø—Ç–µ
set -a
source $ENV_FILE
set +a

echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã."

# 2. –û–ë–ù–û–í–õ–ï–ù–ò–ï –ë–ê–ó–û–í–´–• –û–ë–†–ê–ó–û–í
echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã (mysql, redis, php, etc)..."
docker-compose $COMPOSE_FILES pull

# 3. –°–ë–û–†–ö–ê –ù–û–í–´–• –û–ë–†–ê–ó–û–í –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
echo "üõ†Ô∏è  –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã –¥–ª—è backend –∏ frontend..."
docker-compose $COMPOSE_FILES build --parallel backend frontend

# 4. –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–û–í
echo "üö¢ –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
# –ò—Å–ø–æ–ª—å–∑—É–µ–º --force-recreate, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —á—å–∏ –æ–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å.
# --no-deps –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ë–î), –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å.
# -d –∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.
docker-compose $COMPOSE_FILES up -d --force-recreate --no-deps backend frontend scheduler nginx

echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã. –û–∂–∏–¥–∞–µ–º –∏—Ö –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏..."

# 5. –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò –°–ï–†–í–ò–°–û–í
# –î–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –Ω–∞ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å backend (–ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π, —á—Ç–æ PHP –¥–æ—Å—Ç—É–ø–µ–Ω)
echo "‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å backend..."
timeout 120s bash -c 'until docker-compose '"$COMPOSE_FILES"' exec -T backend php -v > /dev/null 2>&1; do echo "   ...–æ–∂–∏–¥–∞–µ–º backend..."; sleep 3; done'
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: Backend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤–æ–≤—Ä–µ–º—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    docker-compose $COMPOSE_FILES logs --tail=50 backend
    exit 1
fi
echo "üëç Backend –≥–æ—Ç–æ–≤."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å frontend (–∏—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç)
echo "‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å frontend..."
timeout 120s bash -c 'until docker-compose '"$COMPOSE_FILES"' logs frontend 2>/dev/null | grep -q -i "listening"; do echo "   ...–æ–∂–∏–¥–∞–µ–º frontend..."; sleep 3; done'
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: Frontend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤–æ–≤—Ä–µ–º—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    docker-compose $COMPOSE_FILES logs --tail=50 frontend
    exit 1
fi
echo "üëç Frontend –≥–æ—Ç–æ–≤."

# 6. –ó–ê–î–ê–ß–ò –ü–û–°–õ–ï –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø
echo "‚öôÔ∏è  –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–¥–∞—á–∏ –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."

echo "   - –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose $COMPOSE_FILES exec -T backend php artisan migrate --force

echo "   - –û—á–∏—â–∞–µ–º –∏ –∫–µ—à–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –º–∞—Ä—à—Ä—É—Ç—ã..."
docker-compose $COMPOSE_FILES exec -T backend php artisan cache:clear
docker-compose $COMPOSE_FILES exec -T backend php artisan config:cache
docker-compose $COMPOSE_FILES exec -T backend php artisan route:cache
docker-compose $COMPOSE_FILES exec -T backend php artisan view:cache

echo "‚úÖ –ó–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã."

# 7. –û–ß–ò–°–¢–ö–ê
echo "üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã..."
docker image prune -f

echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose $COMPOSE_FILES ps