services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: project_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 10s
    networks:
      - app-network

  # Laravel Backend (PHP-FPM)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        APP_ENV: development
    container_name: project_backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      # Монтируем код для development
      - ./backend:/var/www
    depends_on:
      - mysql
    environment:
      APP_ENV: development
      APP_DEBUG: "true"
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel_db
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_password
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis
    healthcheck:
      test: ["CMD", "php-fpm-healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # Redis для кеширования и очередей
  redis:
    image: redis:7-alpine
    container_name: project_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  # Nuxt Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: project_frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      API_URL: http://localhost/api
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - app-network

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: project_nginx
    restart: unless-stopped
    volumes:
      # Конфигурация nginx
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # Статические файлы Laravel
      - ./backend/public:/var/www/backend/public:ro
      # Логи nginx
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_storage:
    driver: local
  backend_bootstrap_cache:
    driver: local
  nginx_logs:
    driver: local