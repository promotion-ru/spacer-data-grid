services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: project_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  # Redis
  redis:
    image: redis:alpine
    container_name: project_redis
    restart: unless-stopped
    networks:
      - app-network

  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: project_backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      - mysql
      - redis
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel_db
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - app-network

  # Laravel Scheduler
  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: project_scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      - mysql
      - redis
      - backend
    command: php artisan schedule:work
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel_db
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - app-network

  # Nuxt Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: project_frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: project_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local