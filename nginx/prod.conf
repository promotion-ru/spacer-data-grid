# Production nginx конфигурация
# HTTP сервер для перенаправления на HTTPS
server {
    listen 80;
    server_name grid.lk.cool;

    # Let's Encrypt validation
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Перенаправление всего остального на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS сервер
server {
    listen 443 ssl http2;
    server_name grid.lk.cool;

    # SSL конфигурация
    ssl_certificate /etc/letsencrypt/live/grid.lk.cool/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/grid.lk.cool/privkey.pem;

    # Включаем оптимальные SSL настройки от Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self';" always;

    # Настройки для production
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Логирование ошибок (минимальное в production)
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # Brotli сжатие (если модуль доступен)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Frontend (Nuxt.js) - основной трафик
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Production таймауты
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Кеширование статического контента от Nuxt
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
        }
    }

    # Backend API (Laravel через PHP-FPM)
    location /api {
        # Убираем /api из пути для Laravel
        rewrite ^/api/(.*)$ /$1 break;

        # Пробуем найти файл, если не найден - отправляем на PHP
        try_files $uri $uri/ @laravel;
    }

    # Обработчик Laravel через PHP-FPM
    location @laravel {
        fastcgi_pass backend:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /var/www/public/index.php;
        include fastcgi_params;

        # Дополнительные параметры для Laravel
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;

        # Production таймауты
        fastcgi_connect_timeout 30s;
        fastcgi_send_timeout 60s;
        fastcgi_read_timeout 60s;

        # Буферизация для производительности
        fastcgi_buffering on;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;

        # Кеширование API ответов (осторожно с динамическим контентом)
        # add_header X-Cache-Status "DYNAMIC";
    }

    # Laravel статические файлы (storage, uploads)
    location /storage {
        alias /var/www/backend/public/storage;
        try_files $uri $uri/ =404;

        # Агрессивное кеширование для uploads
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STORAGE";

        # Защита от прямого доступа к .php файлам
        location ~ \.php$ {
            deny all;
        }
    }

    # Laravel assets (css, js, images)
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /var/www/backend/public;
        try_files $uri =404;

        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "ASSET";
    }

    # Health checks
    location /_health {
        access_log off;

        # Проверяем PHP-FPM
        location /_health/php {
            fastcgi_pass backend:9000;
            fastcgi_param SCRIPT_FILENAME /var/www/public/index.php;
            fastcgi_param REQUEST_URI /health;
            include fastcgi_params;
        }

        # Проверяем Nuxt
        location /_health/frontend {
            proxy_pass http://frontend:3000/_health;
        }

        # Общий health check nginx
        return 200 "OK";
        add_header Content-Type text/plain;
    }

    # Robots.txt
    location /robots.txt {
        alias /var/www/backend/public/robots.txt;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Sitemap
    location /sitemap.xml {
        alias /var/www/backend/public/sitemap.xml;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Блокировка доступа к служебным файлам
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /composer\.(json|lock) {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /package\.(json|lock) {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /\.env {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Блокировка доступа к Laravel служебным директориям
    location ~ ^/(storage|bootstrap|config|database|resources|routes|tests)/ {
        deny all;
        access_log off;
        log_not_found off;
    }
}